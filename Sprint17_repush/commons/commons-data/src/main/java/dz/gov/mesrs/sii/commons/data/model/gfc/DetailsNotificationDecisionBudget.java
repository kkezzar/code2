package dz.gov.mesrs.sii.commons.data.model.gfc;

// Generated 24 nov. 2014 16:52:54 by Hibernate Tools 3.6.0

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;

/**
 * DetailsNotificationDecisionBudget generated by hbm2java
 */
@Entity
@Table(name = "details_notification_decision_budget", schema = "gfc")
public class DetailsNotificationDecisionBudget implements java.io.Serializable, Identifiable<Integer> {

	/**
	 * @author Mounir.MESSAOUDI on : 24 nov. 2014 17:32:38
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Chapitre chapitre;
	private DecisionBudget decisionBudget;
	private BigDecimal montant;
	private Boolean budgetRecette;
	private String observation;
	private List<DetailsReparatitionBudget> detailsReparatitionBudgets = new ArrayList<DetailsReparatitionBudget>(0);

	public DetailsNotificationDecisionBudget() {
	}

	public DetailsNotificationDecisionBudget(Integer id, Chapitre chapitre, DecisionBudget decisionBudget,
			BigDecimal montant) {
		this.id = id;
		this.chapitre = chapitre;
		this.decisionBudget = decisionBudget;
		this.montant = montant;
	}

	public DetailsNotificationDecisionBudget(Integer id, Chapitre chapitre, DecisionBudget decisionBudget,
			BigDecimal montant, Boolean budgetRecette, String observation,
			List<DetailsReparatitionBudget> detailsReparatitionBudgets) {
		this.id = id;
		this.chapitre = chapitre;
		this.decisionBudget = decisionBudget;
		this.montant = montant;
		this.budgetRecette = budgetRecette;
		this.observation = observation;
		this.detailsReparatitionBudgets = detailsReparatitionBudgets;
	}

	@SequenceGenerator(name = "details_notification_decision_budget_id_seq", sequenceName = "gfc.details_notification_decision_budget_id_seq")
	@Id
	@GeneratedValue(generator = "details_notification_decision_budget_id_seq")
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_chapitre", nullable = false)
	public Chapitre getChapitre() {
		return this.chapitre;
	}

	public void setChapitre(Chapitre chapitre) {
		this.chapitre = chapitre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_decision_budget", nullable = false)
	public DecisionBudget getDecisionBudget() {
		return this.decisionBudget;
	}

	public void setDecisionBudget(DecisionBudget decisionBudget) {
		this.decisionBudget = decisionBudget;
	}

	@Column(name = "montant", nullable = false, precision = 10)
	public BigDecimal getMontant() {
		return this.montant;
	}

	public void setMontant(BigDecimal montant) {
		this.montant = montant;
	}

	@Column(name = "budget_recette")
	public Boolean getBudgetRecette() {
		return this.budgetRecette;
	}

	public void setBudgetRecette(Boolean budgetRecette) {
		this.budgetRecette = budgetRecette;
	}

	@Column(name = "observation", length = 100)
	public String getObservation() {
		return this.observation;
	}

	public void setObservation(String observation) {
		this.observation = observation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detailsNotificationDecisionBudget")
	public List<DetailsReparatitionBudget> getDetailsReparatitionBudgets() {
		return this.detailsReparatitionBudgets;
	}

	public void setDetailsReparatitionBudgets(List<DetailsReparatitionBudget> detailsReparatitionBudgets) {
		this.detailsReparatitionBudgets = detailsReparatitionBudgets;
	}

	@Transient
	@Override
	public Integer getIdenfiant() {
		return id;
	}

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}

}
