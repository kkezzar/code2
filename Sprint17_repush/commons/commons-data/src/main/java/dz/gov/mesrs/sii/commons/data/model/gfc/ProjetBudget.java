package dz.gov.mesrs.sii.commons.data.model.gfc;

// Generated 24 nov. 2014 16:52:54 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;
import dz.gov.mesrs.sii.commons.data.model.bpm.SituationEntite;
import dz.gov.mesrs.sii.commons.data.model.referentiel.Nomenclature;

/**
 * ProjetBudget generated by hbm2java
 */
@Entity
@Table(name = "projet_budget", schema = "gfc")
public class ProjetBudget implements java.io.Serializable, Identifiable<Integer> {

	/**
	 * @author Mounir.MESSAOUDI on : 24 nov. 2014 17:33:42
	 */
	private static final long serialVersionUID = 1L;

	private Integer id;
	private Nomenclature typeBudget;
	private ProjetBudget projetBudget;
	private Nomenclature uniteMonetaire;
	private ExerciceBudgetaire exerciceBudgetaire;
	private SituationEntite situation;
	private String identite;
	private String description;
	private Date dateReceptionNoteOrientation;
	private Date dateDebut;
	private Date dateFin;
	private Date dateEnvoiMF;
	private String observation;
	private List<DetailsProjetBudget> detailsProjetBudgets = new ArrayList<DetailsProjetBudget>(0);
	private List<DetailsProjetBudgetEtablissement> detailsProjetBudgetsEtablissement = new ArrayList<DetailsProjetBudgetEtablissement>(
			0);
	private List<ProjetBudget> projetBudgets = new ArrayList<ProjetBudget>(0);
	private List<FicheBesoins> fichesBesoins = new ArrayList<FicheBesoins>(0);
	private List<DecisionBudget> decisionBudgets = new ArrayList<DecisionBudget>(0);

	public ProjetBudget() {
	}

	@SequenceGenerator(name = "projet_budget_id_seq", sequenceName = "gfc.projet_budget_id_seq")
	@Id
	@GeneratedValue(generator = "projet_budget_id_seq")
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type_budget", nullable = false)
	public Nomenclature getTypeBudget() {
		return this.typeBudget;
	}

	public void setTypeBudget(Nomenclature typeBudget) {
		this.typeBudget = typeBudget;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_projet_budget_parent")
	public ProjetBudget getProjetBudget() {
		return this.projetBudget;
	}

	public void setProjetBudget(ProjetBudget projetBudget) {
		this.projetBudget = projetBudget;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_unite_monetaire", nullable = false)
	public Nomenclature getUniteMonetaire() {
		return this.uniteMonetaire;
	}

	public void setUniteMonetaire(Nomenclature uniteMonetaire) {
		this.uniteMonetaire = uniteMonetaire;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_exercice_budgetaire", nullable = false)
	public ExerciceBudgetaire getExerciceBudgetaire() {
		return this.exerciceBudgetaire;
	}

	public void setExerciceBudgetaire(ExerciceBudgetaire exerciceBudgetaire) {
		this.exerciceBudgetaire = exerciceBudgetaire;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_situation", nullable = false)
	public SituationEntite getSituation() {
		return this.situation;
	}

	public void setSituation(SituationEntite situation) {
		this.situation = situation;
	}

	@Column(name = "identite", nullable = false, length = 50)
	public String getIdentite() {
		return this.identite;
	}

	public void setIdentite(String identite) {
		this.identite = identite;
	}

	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_reception_note_orientation", nullable = false, length = 29)
	public Date getDateReceptionNoteOrientation() {
		return dateReceptionNoteOrientation;
	}

	public void setDateReceptionNoteOrientation(Date dateReceptionNoteOrientation) {
		this.dateReceptionNoteOrientation = dateReceptionNoteOrientation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_debut", nullable = false, length = 29)
	public Date getDateDebut() {
		return this.dateDebut;
	}

	public void setDateDebut(Date dateDebut) {
		this.dateDebut = dateDebut;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_fin", length = 29)
	public Date getDateFin() {
		return this.dateFin;
	}

	public void setDateFin(Date dateFin) {
		this.dateFin = dateFin;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_envoi_mf", length = 29)
	public Date getDateEnvoiMF() {
		return dateEnvoiMF;
	}

	public void setDateEnvoiMF(Date dateEnvoiMF) {
		this.dateEnvoiMF = dateEnvoiMF;
	}

	@Column(name = "observation", length = 200)
	public String getObservation() {
		return this.observation;
	}

	public void setObservation(String observation) {
		this.observation = observation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetBudget", cascade = { CascadeType.REMOVE, CascadeType.REFRESH }, orphanRemoval = true)
	public List<DetailsProjetBudget> getDetailsProjetBudgets() {
		return this.detailsProjetBudgets;
	}

	public void setDetailsProjetBudgets(List<DetailsProjetBudget> detailsProjetBudgets) {
		this.detailsProjetBudgets = detailsProjetBudgets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetBudget", cascade = { CascadeType.REMOVE, CascadeType.REFRESH }, orphanRemoval = true)
	public List<DetailsProjetBudgetEtablissement> getDetailsProjetBudgetsEtablissement() {
		return this.detailsProjetBudgetsEtablissement;
	}

	public void setDetailsProjetBudgetsEtablissement(
			List<DetailsProjetBudgetEtablissement> detailsProjetBudgetsEtablissement) {
		this.detailsProjetBudgetsEtablissement = detailsProjetBudgetsEtablissement;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetBudget")
	public List<ProjetBudget> getProjetBudgets() {
		return this.projetBudgets;
	}

	public void setProjetBudgets(List<ProjetBudget> projetBudgets) {
		this.projetBudgets = projetBudgets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetBudget", cascade = { CascadeType.MERGE, CascadeType.REMOVE,
			CascadeType.REFRESH }, orphanRemoval = true)
	public List<FicheBesoins> getFichesBesoins() {
		return this.fichesBesoins;
	}

	public void setFichesBesoins(List<FicheBesoins> fichesBesoins) {
		this.fichesBesoins = fichesBesoins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetBudget", cascade = { CascadeType.MERGE, CascadeType.REMOVE,
			CascadeType.REFRESH }, orphanRemoval = true)
	public List<DecisionBudget> getDecisionBudgets() {
		return this.decisionBudgets;
	}

	public void setDecisionBudgets(List<DecisionBudget> decisionBudgets) {
		this.decisionBudgets = decisionBudgets;
	}

	@Transient
	@Override
	public Integer getIdenfiant() {
		return id;
	}

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}

}
