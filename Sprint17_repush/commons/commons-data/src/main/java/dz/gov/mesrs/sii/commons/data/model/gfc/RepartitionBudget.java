package dz.gov.mesrs.sii.commons.data.model.gfc;

// Generated 24 nov. 2014 16:52:54 by Hibernate Tools 3.6.0

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;
import dz.gov.mesrs.sii.commons.data.model.bpm.SituationEntite;
import dz.gov.mesrs.sii.commons.data.model.referentiel.Nomenclature;
import dz.gov.mesrs.sii.commons.data.model.referentiel.RefEtablissement;

/**
 * RepartitionBudget generated by hbm2java
 */
@Entity
@Table(name = "repartition_budget", schema = "gfc")
public class RepartitionBudget implements java.io.Serializable, Identifiable<Integer> {

	/**
	 * @author Mounir.MESSAOUDI on : 24 nov. 2014 17:33:59
	 */
	private static final long serialVersionUID = 1L;

	private Integer id;
	private DecisionBudget decisionBudget;
	private RefEtablissement etablissement;
	private Nomenclature uniteMonetaire;
	private SituationEntite situation;
	private BigDecimal montantTotalRecettes;
	private BigDecimal montantTotalDepenses;
	private Date dateVisaCf;
	private Date dateSignatureOrdonnateur;
	private Date dateSignatureWali;
	private String observation;
	private List<DetailsReparatitionBudget> detailsReparatitionBudgets = new ArrayList<DetailsReparatitionBudget>(0);
	private List<MouvementBudget> mouvementBudgets = new ArrayList<MouvementBudget>(0);

	public RepartitionBudget() {
	}

	public RepartitionBudget(Integer id, DecisionBudget decisionBudget, RefEtablissement etablissement,
			Nomenclature uniteMonetaire, SituationEntite situation) {
		this.id = id;
		this.decisionBudget = decisionBudget;
		this.etablissement = etablissement;
		this.uniteMonetaire = uniteMonetaire;
		this.situation = situation;
	}

	public RepartitionBudget(Integer id, DecisionBudget decisionBudget, RefEtablissement etablissement,
			Nomenclature uniteMonetaire, SituationEntite situation, BigDecimal montantTotalRecettes,
			BigDecimal montantTotalDepenses, Date dateVisaCf, Date dateSignatureOrdonnateur, Date dateSignatureWali,
			String observation, List<DetailsReparatitionBudget> detailsReparatitionBudgets,
			List<MouvementBudget> mouvementBudgets) {
		this.id = id;
		this.decisionBudget = decisionBudget;
		this.etablissement = etablissement;
		this.uniteMonetaire = uniteMonetaire;
		this.situation = situation;
		this.montantTotalRecettes = montantTotalRecettes;
		this.montantTotalDepenses = montantTotalDepenses;
		this.dateVisaCf = dateVisaCf;
		this.dateSignatureOrdonnateur = dateSignatureOrdonnateur;
		this.dateSignatureWali = dateSignatureWali;
		this.observation = observation;
		this.detailsReparatitionBudgets = detailsReparatitionBudgets;
		this.mouvementBudgets = mouvementBudgets;
	}

	@SequenceGenerator(name = "repartition_budget_id_seq", sequenceName = "gfc.repartition_budget_id_seq")
	@Id
	@GeneratedValue(generator = "repartition_budget_id_seq")
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_decision_budget", nullable = false)
	public DecisionBudget getDecisionBudget() {
		return this.decisionBudget;
	}

	public void setDecisionBudget(DecisionBudget decisionBudget) {
		this.decisionBudget = decisionBudget;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_etablissement", nullable = false)
	public RefEtablissement getEtablissement() {
		return this.etablissement;
	}

	public void setEtablissement(RefEtablissement etablissement) {
		this.etablissement = etablissement;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_unite_monetaire", nullable = false)
	public Nomenclature getUniteMonetaire() {
		return this.uniteMonetaire;
	}

	public void setUniteMonetaire(Nomenclature uniteMonetaire) {
		this.uniteMonetaire = uniteMonetaire;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_situation", nullable = false)
	public SituationEntite getSituation() {
		return this.situation;
	}

	public void setSituation(SituationEntite situation) {
		this.situation = situation;
	}

	@Column(name = "montant_total_recettes", precision = 10)
	public BigDecimal getMontantTotalRecettes() {
		return this.montantTotalRecettes;
	}

	public void setMontantTotalRecettes(BigDecimal montantTotalRecettes) {
		this.montantTotalRecettes = montantTotalRecettes;
	}

	@Column(name = "montant_total_depenses", precision = 10)
	public BigDecimal getMontantTotalDepenses() {
		return this.montantTotalDepenses;
	}

	public void setMontantTotalDepenses(BigDecimal montantTotalDepenses) {
		this.montantTotalDepenses = montantTotalDepenses;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_visa_cf", length = 29)
	public Date getDateVisaCf() {
		return this.dateVisaCf;
	}

	public void setDateVisaCf(Date dateVisaCf) {
		this.dateVisaCf = dateVisaCf;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_signature_ordonnateur", length = 29)
	public Date getDateSignatureOrdonnateur() {
		return this.dateSignatureOrdonnateur;
	}

	public void setDateSignatureOrdonnateur(Date dateSignatureOrdonnateur) {
		this.dateSignatureOrdonnateur = dateSignatureOrdonnateur;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_signature_wali", length = 29)
	public Date getDateSignatureWali() {
		return this.dateSignatureWali;
	}

	public void setDateSignatureWali(Date dateSignatureWali) {
		this.dateSignatureWali = dateSignatureWali;
	}

	@Column(name = "observation", length = 200)
	public String getObservation() {
		return this.observation;
	}

	public void setObservation(String observation) {
		this.observation = observation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "repartitionBudget")
	public List<DetailsReparatitionBudget> getDetailsReparatitionBudgets() {
		return this.detailsReparatitionBudgets;
	}

	public void setDetailsReparatitionBudgets(List<DetailsReparatitionBudget> detailsReparatitionBudgets) {
		this.detailsReparatitionBudgets = detailsReparatitionBudgets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "repartitionBudget")
	public List<MouvementBudget> getMouvementBudgets() {
		return this.mouvementBudgets;
	}

	public void setMouvementBudgets(List<MouvementBudget> mouvementBudgets) {
		this.mouvementBudgets = mouvementBudgets;
	}

	@Transient
	@Override
	public Integer getIdenfiant() {
		return id;
	}

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}
}
