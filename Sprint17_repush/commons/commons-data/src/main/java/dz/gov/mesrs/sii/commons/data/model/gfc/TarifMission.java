package dz.gov.mesrs.sii.commons.data.model.gfc;

// Generated 12 f√©vr. 2015 16:22:41 by Mounir MESSAOUDI Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;
import dz.gov.mesrs.sii.commons.data.model.bpm.SituationEntite;
import dz.gov.mesrs.sii.commons.data.model.grh.CategorieProfessionnelle;
import dz.gov.mesrs.sii.commons.data.model.referentiel.Nomenclature;

/**
 * TarifMission generated by hbm2java
 */
@Entity
@Table(name = "tarif_mission", schema = "gfc")
public class TarifMission implements java.io.Serializable, Identifiable<Integer> {

	private static final long serialVersionUID = 1L;

	private Integer id;
	private Nomenclature typeTarif;
	private BigDecimal fraisRestauration;
	private BigDecimal fraisHebergement;
	private BigDecimal totalJournalier;

	private CategorieProfessionnelle categorieMin;
	private CategorieProfessionnelle categorieMax;

	private Boolean fonctionSuperieure;
	private Boolean missionEtrange;

	private Boolean actif;
	private String observation;

	private List<DossierMission> dossierMissions = new ArrayList<DossierMission>(0);

	private SituationEntite situation;
	private String labelTarif;
	
	public TarifMission() {
	}

	public TarifMission(Integer id, Nomenclature typeTarif, BigDecimal fraisRestauration, BigDecimal fraisHebergement,
			BigDecimal totalJournalier, Boolean actif) {
		this.id = id;
		this.typeTarif = typeTarif;
		this.fraisRestauration = fraisRestauration;
		this.fraisHebergement = fraisHebergement;
		this.totalJournalier = totalJournalier;
		this.actif = actif;
	}

	public TarifMission(Integer id, Nomenclature typeTarif, BigDecimal fraisRestauration, BigDecimal fraisHebergement,
			BigDecimal totalJournalier, CategorieProfessionnelle categorieMin, CategorieProfessionnelle categorieMax,
			Boolean fonctionSuperieure, Boolean missionEtrange, Boolean actif, String observation,
			SituationEntite situation, List<DossierMission> dossierMissions) {
		this.id = id;
		this.typeTarif = typeTarif;
		this.fraisRestauration = fraisRestauration;
		this.fraisHebergement = fraisHebergement;
		this.totalJournalier = totalJournalier;
		this.categorieMin = categorieMin;
		this.categorieMax = categorieMax;
		this.fonctionSuperieure = fonctionSuperieure;
		this.missionEtrange = missionEtrange;
		this.actif = actif;
		this.observation = observation;
		this.situation = situation;
		this.dossierMissions = dossierMissions;
	}

	@SequenceGenerator(name = "tarif_mission_id_seq", sequenceName = "gfc.tarif_mission_id_seq")
	@Id
	@GeneratedValue(generator = "tarif_mission_id_seq")
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch =FetchType.LAZY)
	@JoinColumn(name = "id_type_tarif", nullable = false)
	public Nomenclature getTypeTarif() {
		return this.typeTarif;
	}

	public void setTypeTarif(Nomenclature typeTarif) {
		this.typeTarif = typeTarif;
	}

	@Column(name = "frais_restauration",  precision = 10)
	public BigDecimal getFraisRestauration() {
		return this.fraisRestauration;
	}

	public void setFraisRestauration(BigDecimal fraisRestauration) {
		this.fraisRestauration = fraisRestauration;
	}

	@Column(name = "frais_hebergement",  precision = 10)
	public BigDecimal getFraisHebergement() {
		return this.fraisHebergement;
	}

	public void setFraisHebergement(BigDecimal fraisHebergement) {
		this.fraisHebergement = fraisHebergement;
	}

	@Column(name = "total_journalier",  precision = 10)
	public BigDecimal getTotalJournalier() {
		return this.totalJournalier;
	}

	public void setTotalJournalier(BigDecimal totalJournalier) {
		this.totalJournalier = totalJournalier;
	}

	@ManyToOne(fetch =FetchType.LAZY)
	@JoinColumn(name = "id_categorie_min")
	public CategorieProfessionnelle getCategorieMin() {
		return this.categorieMin;
	}

	public void setCategorieMin(CategorieProfessionnelle categorieMin) {
		this.categorieMin = categorieMin;
	}

	@ManyToOne(fetch =FetchType.LAZY)
	@JoinColumn(name = "id_categorie_max")
	public CategorieProfessionnelle getCategorieMax() {
		return this.categorieMax;
	}

	public void setCategorieMax(CategorieProfessionnelle categorieMax) {
		this.categorieMax = categorieMax;
	}

	@Column(name = "fonction_superieure")
	public Boolean getFonctionSuperieure() {
		return this.fonctionSuperieure;
	}

	public void setFonctionSuperieure(Boolean fonctionSuperieure) {
		this.fonctionSuperieure = fonctionSuperieure;
	}

	@Column(name = "mission_etrange")
	public Boolean getMissionEtrange() {
		return this.missionEtrange;
	}

	public void setMissionEtrange(Boolean missionEtrange) {
		this.missionEtrange = missionEtrange;
	}

	@Column(name = "actif")
	public Boolean getActif() {
		return this.actif;
	}

	public void setActif(Boolean actif) {
		this.actif = actif;
	}

	@Column(name = "observation", length = 200)
	public String getObservation() {
		return this.observation;
	}

	public void setObservation(String observation) {
		this.observation = observation;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_situation", nullable = true)
	public SituationEntite getSituation() {
		return this.situation;
	}

	public void setSituation(SituationEntite situation) {
		this.situation = situation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tarifMission")
	public List<DossierMission> getDossierMissions() {
		return this.dossierMissions;
	}

	public void setDossierMissions(List<DossierMission> dossierMissions) {
		this.dossierMissions = dossierMissions;
	}
	

	/**
	 * @return the labelTarif
	 */
	@Column(name = "label_tarif", length = 200)
	public String getLabelTarif() {
		return labelTarif;
	}

	/**
	 * @param labelTarif the labelTarif to set
	 */
	public void setLabelTarif(String labelTarif) {
		this.labelTarif = labelTarif;
	}

	@Transient
	@Override
	public Integer getIdenfiant() {
		return id;
	}

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}
	
}