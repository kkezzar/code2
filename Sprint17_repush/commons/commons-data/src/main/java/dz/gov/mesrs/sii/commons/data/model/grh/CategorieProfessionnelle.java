package dz.gov.mesrs.sii.commons.data.model.grh;

// Generated 21 oct. 2014 11:36:27 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;
import dz.gov.mesrs.sii.commons.data.model.referentiel.Nomenclature;

/**
 * CategorieProfessionnelle generated by hbm2java
 */
@Entity
@Table(name = "categorie_professionnelle", schema = "grh")
public class CategorieProfessionnelle implements java.io.Serializable, Identifiable<Integer> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Nomenclature nomenclatureByGroupe;
	private Nomenclature nomenclatureByCategorie;
	private Nomenclature nomenclatureByTypeCategorie;
	private Long indiceMin;
	private Boolean horsCategorie;
	private Set<PosteSuperieure> posteSuperieures = new HashSet<PosteSuperieure>(0);
	private Set<Grade> grades = new HashSet<Grade>(0);
	private Set<Carriere> carrieres = new HashSet<Carriere>(0);

	private List<GrilleIndiciaire> grilleIndiciaires = new ArrayList<GrilleIndiciaire>(0);
	private Set<CategorieNiveau> niveaux =new LinkedHashSet<CategorieNiveau>(0);
	private Set<DetailRecrutement> detailRecrutements = new HashSet<DetailRecrutement>(0);

	public CategorieProfessionnelle() {
	}

	public CategorieProfessionnelle(Integer id) {
		this.id = id;
	}

	public CategorieProfessionnelle(Integer id, Nomenclature nomenclatureByGroupe,
			Nomenclature nomenclatureByCategorie, Nomenclature nomenclatureByTypeCategorie, Long indiceMin,
			Boolean horsCategorie, Set<PosteSuperieure> posteSuperieures, Set<Grade> grades, Set<Carriere> carrieres,
			Set<Nomenclature> nomenclatures, List<GrilleIndiciaire> grilleIndiciaires,
			Set<DetailRecrutement> detailRecrutements) {
		this.id = id;
		this.nomenclatureByGroupe = nomenclatureByGroupe;
		this.nomenclatureByCategorie = nomenclatureByCategorie;
		this.nomenclatureByTypeCategorie = nomenclatureByTypeCategorie;
		this.indiceMin = indiceMin;
		this.horsCategorie = horsCategorie;
		this.posteSuperieures = posteSuperieures;
		this.grades = grades;
		this.carrieres = carrieres;

		this.grilleIndiciaires = grilleIndiciaires;
		this.detailRecrutements = detailRecrutements;
	}

	@Id
	@SequenceGenerator(name = "grh_categorie_professionnelle_id_categorie_professionnelle_seq", initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "grh_categorie_professionnelle_id_categorie_professionnelle_seq")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groupe")
	public Nomenclature getNomenclatureByGroupe() {
		return this.nomenclatureByGroupe;
	}

	public void setNomenclatureByGroupe(Nomenclature nomenclatureByGroupe) {
		this.nomenclatureByGroupe = nomenclatureByGroupe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categorie")
	public Nomenclature getNomenclatureByCategorie() {
		return this.nomenclatureByCategorie;
	}

	public void setNomenclatureByCategorie(Nomenclature nomenclatureByCategorie) {
		this.nomenclatureByCategorie = nomenclatureByCategorie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_categorie")
	public Nomenclature getNomenclatureByTypeCategorie() {
		return this.nomenclatureByTypeCategorie;
	}

	public void setNomenclatureByTypeCategorie(Nomenclature nomenclatureByTypeCategorie) {
		this.nomenclatureByTypeCategorie = nomenclatureByTypeCategorie;
	}

	@Column(name = "indice_min")
	public Long getIndiceMin() {
		return this.indiceMin;
	}

	public void setIndiceMin(Long indiceMin) {
		this.indiceMin = indiceMin;
	}

	@Column(name = "hors_categorie")
	public Boolean getHorsCategorie() {
		return this.horsCategorie;
	}

	public void setHorsCategorie(Boolean horsCategorie) {
		this.horsCategorie = horsCategorie;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categorieProfessionnelle" , cascade=CascadeType.ALL)
	public Set<PosteSuperieure> getPosteSuperieures() {
		return this.posteSuperieures;
	}

	public void setPosteSuperieures(Set<PosteSuperieure> posteSuperieures) {
		this.posteSuperieures = posteSuperieures;
	}
//TODO repasser a la table d'association
	@OneToMany(mappedBy="categorieProfessionnelle" , cascade = CascadeType.ALL)
	public Set<Grade> getGrades() {
		return this.grades;
	}

	public void setGrades(Set<Grade> grades) {
		this.grades = grades;
	}
	
	@OneToMany(cascade=CascadeType.ALL, orphanRemoval=true, mappedBy="categorieProfessionnelle")
	public Set<CategorieNiveau> getNiveaux() {
		return niveaux;
	}
	
	public void setNiveaux(Set<CategorieNiveau> niveaux) {
		this.niveaux = niveaux;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categorieProfessionnelle")
	public Set<Carriere> getCarrieres() {
		return this.carrieres;
	}

	public void setCarrieres(Set<Carriere> carrieres) {
		this.carrieres = carrieres;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categorieProfessionnelle", cascade = CascadeType.ALL)
	public List<GrilleIndiciaire> getGrilleIndiciaires() {
		return this.grilleIndiciaires;
	}

	public void setGrilleIndiciaires(List<GrilleIndiciaire> grilleIndiciaires) {
		this.grilleIndiciaires = grilleIndiciaires;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "categorieProfessionnelle")
	public Set<DetailRecrutement> getDetailRecrutements() {
		return this.detailRecrutements;
	}

	public void setDetailRecrutements(Set<DetailRecrutement> detailRecrutements) {
		this.detailRecrutements = detailRecrutements;
	}

	@Transient
	@Override
	public Integer getIdenfiant() {
		return this.getId();
	}

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}

}
