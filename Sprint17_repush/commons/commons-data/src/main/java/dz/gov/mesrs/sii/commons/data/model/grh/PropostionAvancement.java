package dz.gov.mesrs.sii.commons.data.model.grh;

// Generated 21 oct. 2014 11:36:27 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import dz.gov.mesrs.sii.commons.data.model.Identifiable;
import dz.gov.mesrs.sii.commons.data.model.bpm.SituationEntite;
import dz.gov.mesrs.sii.commons.data.model.referentiel.Nomenclature;
import dz.gov.mesrs.sii.commons.data.model.referentiel.RefEtablissement;



/**
 * PropostionAvancement generated by hbm2java
 */
@Entity
@Table(name = "propostion_avancement", schema = "grh")
public class PropostionAvancement implements java.io.Serializable, Identifiable<Long>  {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private RefEtablissement refEtablissement;
	private Nomenclature mois;
	private Integer annee;
	private String intitule;
	private String description;
	private Date dateProposition;
	private List<EmployePropose> employeProposes ;
	private Date dateCommission;
	private Date dateDecision;
	private SituationEntite situation;
	private Nomenclature nomenclatureByTypeAvancement;
	
	 
	
	
	
	
	public PropostionAvancement() {
	}

	public PropostionAvancement(Long id) {
		this.id = id;
	}
	
	

	public PropostionAvancement(Long id, Nomenclature mois, Integer annee,
			String intitule, String description, Date dateProposition,
			List<EmployePropose> employeProposes,Date dateCommission,Date dateDecision,SituationEntite situation,Nomenclature nomenclatureByTypeAvancement) {
		super();
		this.id = id;
		this.mois = mois;
		this.annee = annee;
		this.intitule = intitule;
		this.description = description;
		this.dateProposition = dateProposition;
		this.employeProposes = employeProposes;
		this.dateCommission=dateCommission;
		this.dateDecision= dateDecision;
		this.situation=situation;
		this.nomenclatureByTypeAvancement=nomenclatureByTypeAvancement;
	}
	
	
	
	@Id
	@SequenceGenerator(name = "grh.propostion_avancement_id_proposition_seq", initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "grh.propostion_avancement_id_proposition_seq")
	@Column(name = "id", unique = true, nullable = false)
	
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	
	/**
	 * [PropostionAvancement.refEtablissement] Getter 
	 * @author slimane ramdane on : 4 dï¿½c. 2014  12:12:15
	 * @return the refEtablissement
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "etablissement")
	public RefEtablissement getRefEtablissement() {
		return refEtablissement;
	}

	/**
	 * [PropostionAvancement.refEtablissement] Setter 
	 * @author slimane ramdane on : 4 dï¿½c. 2014  12:12:15
	 * @param refEtablissement the refEtablissement to set
	 */
	public void setRefEtablissement(RefEtablissement refEtablissement) {
		this.refEtablissement = refEtablissement;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mois")
	public Nomenclature getMois() {
		return this.mois;
	}

	public void setMois(Nomenclature mois) {
		this.mois = mois;
	}

	@Column(name = "annee")
	public Integer getAnnee() {
		return this.annee;
	}

	public void setAnnee(Integer annee) {
		this.annee = annee;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_proposition", length = 13)
	public Date getDateProposition() {
		return this.dateProposition;
	}
	/**
	 * [PropostionAvancement.dateProposition] Setter 
	 * @author obelbrik on : 4 dï¿½c. 2014  08:49:47
	 * @param dateProposition the dateProposition to set
	 */
	public void setDateProposition(Date dateProposition) {
		this.dateProposition = dateProposition;
	}
	
	@OneToMany(orphanRemoval = true, cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "propostionAvancement")
		public List<EmployePropose> getEmployeProposes() {
		return this.employeProposes;
	}

	public void setEmployeProposes(List<EmployePropose> employeProposes) {
		this.employeProposes = employeProposes;
	}
	
	/**
	 * [PropostionAvancement.intitule] Getter 
	 * @author obelbrik on : 4 dï¿½c. 2014  08:49:47
	 * @return the intitule
	 */
	@Column(name = "intitule")
	public String getIntitule() {
		return intitule;
	}

	/**
	 * [PropostionAvancement.intitule] Setter 
	 * @author obelbrik on : 4 dï¿½c. 2014  08:49:47
	 * @param intitule the intitule to set
	 */
	public void setIntitule(String intitule) {
		this.intitule = intitule;
	}

	
	
	
	/**
	 * [PropostionAvancement.dateCommission] Getter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @return the dateCommission
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "date_commission", length = 13)
	public Date getDateCommission() {
		return dateCommission;
	}

	/**
	 * [PropostionAvancement.dateCommission] Setter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @param dateCommission the dateCommission to set
	 */
	public void setDateCommission(Date dateCommission) {
		this.dateCommission = dateCommission;
	}

	/**
	 * [PropostionAvancement.dateDecision] Getter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @return the dateDecision
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "date_decision", length = 13)
	public Date getDateDecision() {
		return dateDecision;
	}

	/**
	 * [PropostionAvancement.dateDecision] Setter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @param dateDecision the dateDecision to set
	 */
	public void setDateDecision(Date dateDecision) {
		this.dateDecision = dateDecision;
	}

	/**
	 * [PropostionAvancement.situation] Getter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @return the situation
	 */
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_situation")
	public SituationEntite getSituation() {
		return situation;
	}

	/**
	 * [PropostionAvancement.situation] Setter 
	 * @author obelbrik on : 17 déc. 2014  11:13:07
	 * @param situation the situation to set
	 */
	public void setSituation(SituationEntite situation) {
		this.situation = situation;
	}

	
	
	
	
	/**
	 * [PropostionAvancement.nomenclatureByTypeAvancement] Getter 
	 * @author obelbrik on : 23 déc. 2014  12:17:42
	 * @return the nomenclatureByTypeAvancement
	 */
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_avancement")
	public Nomenclature getNomenclatureByTypeAvancement() {
		return nomenclatureByTypeAvancement;
	}

	/**
	 * [PropostionAvancement.nomenclatureByTypeAvancement] Setter 
	 * @author obelbrik on : 23 déc. 2014  12:17:42
	 * @param nomenclatureByTypeAvancement the nomenclatureByTypeAvancement to set
	 */
	public void setNomenclatureByTypeAvancement(
			Nomenclature nomenclatureByTypeAvancement) {
		this.nomenclatureByTypeAvancement = nomenclatureByTypeAvancement;
	}

	@Transient
	@Override
	public Long getIdenfiant() {
		return this.getId();
	}

	

	@Transient
	@Override
	public String getIdentifiantName() {
		return "id";
	}

	
	

}
