package dz.gov.mesrs.sii.commons.data.model.referentiel;

// Generated 21 janv. 2014 17:45:57 by Hibernate Tools 3.6.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * RefAdresseElectronique generated by hbm2java
 */
@Entity
@Table(name = "ref_adresse_electronique", schema = "ppm")
public class RefAdresseElectronique implements java.io.Serializable {

	/**
	 * serialVersionUID 
	 * @author BELDI Jamel  on : 23 janv. 2014  11:19:43
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private RefCoordonnee refCoordonnee;
	private Nomenclature nomenclatureByTypeAdresseElectronique;
	private Nomenclature nomenclatureByNatureAdresseElectronique;
	private String nomAdresse;

	public RefAdresseElectronique() {
	}

	public RefAdresseElectronique(RefCoordonnee refCoordonnee) {
		this.refCoordonnee = refCoordonnee;
	}

	public RefAdresseElectronique(RefCoordonnee refCoordonnee,
			Nomenclature nomenclatureByTypeAdresseElectronique,
			Nomenclature nomenclatureByNatureAdresseElectronique,
			String nomAdresse) {
		this.refCoordonnee = refCoordonnee;
		this.nomenclatureByTypeAdresseElectronique = nomenclatureByTypeAdresseElectronique;
		this.nomenclatureByNatureAdresseElectronique = nomenclatureByNatureAdresseElectronique;
		this.nomAdresse = nomAdresse;
	}

	//@GenericGenerator(name = "generator_adresse_electronique", strategy = "foreign", parameters = @Parameter(name = "property", value = "refCoordonnee"))
	@Id
	//@GeneratedValue(generator = "generator_adresse_electronique")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public RefCoordonnee getRefCoordonnee() {
		return this.refCoordonnee;
	}

	public void setRefCoordonnee(RefCoordonnee refCoordonnee) {
		this.refCoordonnee = refCoordonnee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_adresse_electronique")
	public Nomenclature getNomenclatureByTypeAdresseElectronique() {
		return this.nomenclatureByTypeAdresseElectronique;
	}

	public void setNomenclatureByTypeAdresseElectronique(
			Nomenclature nomenclatureByTypeAdresseElectronique) {
		this.nomenclatureByTypeAdresseElectronique = nomenclatureByTypeAdresseElectronique;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nature_adresse_electronique")
	public Nomenclature getNomenclatureByNatureAdresseElectronique() {
		return this.nomenclatureByNatureAdresseElectronique;
	}

	public void setNomenclatureByNatureAdresseElectronique(
			Nomenclature nomenclatureByNatureAdresseElectronique) {
		this.nomenclatureByNatureAdresseElectronique = nomenclatureByNatureAdresseElectronique;
	}

	@Column(name = "nom_adresse", nullable = false, length = 200)
	public String getNomAdresse() {
		return this.nomAdresse;
	}

	public void setNomAdresse(String nomAdresse) {
		this.nomAdresse = nomAdresse;
	}

}
