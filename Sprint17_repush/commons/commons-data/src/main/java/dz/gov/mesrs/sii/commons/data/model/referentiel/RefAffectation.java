package dz.gov.mesrs.sii.commons.data.model.referentiel;

// Generated 17 fï¿½vr. 2014 11:25:00 by Hibernate Tools 3.6.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RefAffectation generated by hbm2java
 */
@Entity
@Table(name = "ref_affectation", schema = "ppm")
public class RefAffectation implements java.io.Serializable {

	/**
	 * serialVersionUID
	 * 
	 * @author BELDI Jamel on : 23 janv. 2014 11:07:46
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Nomenclature nomenclature;
	private RefIndividu refIndividu;
	private RefGroupe refGroupeByGroupeAffecte;
	private RefGroupe refGroupeByGroupe;
	private RefStructure refStructure;
	private RefLieu refLieu;
	private Date dateDebut;
	private Date dateFin;
	private RefEvenement refEvenement;
	private RefDomaineLMD refDomaineLMD;
	private RefFiliereLmd refFiliereLmd;
	public RefAffectation() {
	}

	public RefAffectation(int id, Date dateDebut) {
		this.id = id;
		this.dateDebut = dateDebut;
	}

	public RefAffectation(int id, Nomenclature nomenclature,
			RefIndividu refIndividu, RefGroupe refGroupeByGroupeAffecte,
			RefGroupe refGroupeByGroupe, RefLieu refLieu,
			RefStructure refStructure, Date dateDebut,
			RefEvenement refEvenement, Date dateFin,RefDomaineLMD refDomaineLMD,RefFiliereLmd refFiliereLmd) {
		this.id = id;
		this.nomenclature = nomenclature;
		this.refIndividu = refIndividu;
		this.refGroupeByGroupeAffecte = refGroupeByGroupeAffecte;
		this.refGroupeByGroupe = refGroupeByGroupe;
		this.refEvenement = refEvenement;
		this.refStructure = refStructure;
		this.dateDebut = dateDebut;
		this.dateFin = dateFin;
		this.refFiliereLmd = refFiliereLmd;
		this.refDomaineLMD = refDomaineLMD;
	}

	@Id
	@SequenceGenerator(name = "ref_affectation_id_seq", initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ref_affectation_id_seq")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role")
	public Nomenclature getNomenclature() {
		return this.nomenclature;
	}

	public void setNomenclature(Nomenclature nomenclature) {
		this.nomenclature = nomenclature;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "individu")
	public RefIndividu getRefIndividu() {
		return this.refIndividu;
	}

	public void setRefIndividu(RefIndividu refIndividu) {
		this.refIndividu = refIndividu;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groupe_affecte")
	public RefGroupe getRefGroupeByGroupeAffecte() {
		return this.refGroupeByGroupeAffecte;
	}

	public void setRefGroupeByGroupeAffecte(RefGroupe refGroupeByGroupeAffecte) {
		this.refGroupeByGroupeAffecte = refGroupeByGroupeAffecte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groupe")
	public RefGroupe getRefGroupeByGroupe() {
		return this.refGroupeByGroupe;
	}

	public void setRefGroupeByGroupe(RefGroupe refGroupeByGroupe) {
		this.refGroupeByGroupe = refGroupeByGroupe;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "structure")
	public RefStructure getRefStructure() {
		return this.refStructure;
	}

	public void setRefStructure(RefStructure refStructure) {
		this.refStructure = refStructure;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lieu")
	public RefLieu getRefLieu() {
		return this.refLieu;
	}

	public void setRefLieu(RefLieu refLieu) {
		this.refLieu = refLieu;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_debut", nullable = false, length = 29)
	public Date getDateDebut() {
		return this.dateDebut;
	}

	public void setDateDebut(Date dateDebut) {
		this.dateDebut = dateDebut;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_fin", length = 29)
	public Date getDateFin() {
		return this.dateFin;
	}

	public void setDateFin(Date dateFin) {
		this.dateFin = dateFin;
	}

	/**
	 * [RefAffectation.refEvenement] Getter
	 * 
	 * @author BELDI Jamel on : 10 mars 2014 14:13:01
	 * @return the refEvenement
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "evenement")
	public RefEvenement getRefEvenement() {
		return refEvenement;
	}

	/**
	 * [RefAffectation.refEvenement] Setter
	 * 
	 * @author BELDI Jamel on : 10 mars 2014 14:13:01
	 * @param refEvenement
	 *            the refEvenement to set
	 */
	public void setRefEvenement(RefEvenement refEvenement) {
		this.refEvenement = refEvenement;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "domaine")
	public RefDomaineLMD getRefDomaineLMD() {
		return this.refDomaineLMD;
	}

	public void setRefDomaineLMD(RefDomaineLMD refDomaineLMD) {
		this.refDomaineLMD = refDomaineLMD;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "filiere")
	public RefFiliereLmd getRefFiliereLmd() {
		return this.refFiliereLmd;
	}

	public void setRefFiliereLmd(RefFiliereLmd refFiliereLmd) {
		this.refFiliereLmd = refFiliereLmd;
	}

}
