package dz.gov.mesrs.sii.commons.data.model.referentiel;

// Generated 17 fï¿½vr. 2014 11:25:00 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RefDocument generated by hbm2java
 */
@Entity
@Table(name = "ref_document", schema = "ppm")
public class RefDocument implements java.io.Serializable {

	/**
	 * serialVersionUID
	 * 
	 * @author MAKERRI Sofiane on : 10 avr. 2014 11:19:33
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Nomenclature nomenclatureByLangue;
	private RefEtablissement refEtablissement;
	private Nomenclature nomenclatureByNatureDocument;
	private RefDocument refDocument;
	private Nomenclature nomenclatureByTypeDocument;
	private Nomenclature nomenclatureByClassement;
	private String identifiant;
	private String identifiantEntite;
	private String referenceDocument;
	private Date dateDocument;
	private Date dateCreation;
	private String objetDocument;
	private String description;
	private String url;
	private String titreDocument;
	private String nomEntite;
	private Set<RefAffectDocument> refAffectDocuments = new HashSet<RefAffectDocument>(
			0);
	private Set<RefDocument> refDocuments = new HashSet<RefDocument>(0);
	private Set<RefVersionDocument> refVersionDocuments = new HashSet<RefVersionDocument>(
			0);

	private Set<RefMotCle> refMotCles = new HashSet<RefMotCle>(0);

	public RefDocument() {
	}

	public RefDocument(int id) {
		this.id = id;
	}

	public RefDocument(int id, Nomenclature nomenclatureByLangue,
			RefEtablissement refEtablissement,
			Nomenclature nomenclatureByNatureDocument, RefDocument refDocument,
			Nomenclature nomenclatureByTypeDocument,
			Nomenclature nomenclatureByClassement, String identifiant,
			String identifiantEntite, String referenceDocument,
			Date dateDocument, Date dateCreation, String objetDocument,
			String description, String url, String titreDocument,
			String nomEntite, Set<RefDocument> refDocuments,
			Set<RefVersionDocument> refVersionDocuments,
			Set<RefAffectDocument> refAffectDocuments, Set<RefMotCle> refMotCles) {
		this.id = id;
		this.nomenclatureByLangue = nomenclatureByLangue;
		this.refEtablissement = refEtablissement;
		this.nomenclatureByNatureDocument = nomenclatureByNatureDocument;
		this.refDocument = refDocument;
		this.nomenclatureByTypeDocument = nomenclatureByTypeDocument;
		this.nomenclatureByClassement = nomenclatureByClassement;
		this.identifiant = identifiant;
		this.identifiantEntite = identifiantEntite;
		this.referenceDocument = referenceDocument;
		this.dateDocument = dateDocument;
		this.dateCreation = dateCreation;
		this.objetDocument = objetDocument;
		this.description = description;
		this.url = url;
		this.titreDocument = titreDocument;
		this.nomEntite = nomEntite;
		this.refDocuments = refDocuments;
		this.refVersionDocuments = refVersionDocuments;
		this.refAffectDocuments = refAffectDocuments;
		this.refMotCles = refMotCles;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ref_document_seq")
	@SequenceGenerator(name = "ref_document_seq", schema = "ppm", allocationSize = 1)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "langue")
	public Nomenclature getNomenclatureByLangue() {
		return this.nomenclatureByLangue;
	}

	public void setNomenclatureByLangue(Nomenclature nomenclatureByLangue) {
		this.nomenclatureByLangue = nomenclatureByLangue;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "etablissement")
	public RefEtablissement getRefEtablissement() {
		return this.refEtablissement;
	}

	public void setRefEtablissement(RefEtablissement refEtablissement) {
		this.refEtablissement = refEtablissement;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nature_document")
	public Nomenclature getNomenclatureByNatureDocument() {
		return this.nomenclatureByNatureDocument;
	}

	public void setNomenclatureByNatureDocument(
			Nomenclature nomenclatureByNatureDocument) {
		this.nomenclatureByNatureDocument = nomenclatureByNatureDocument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "document_lie")
	public RefDocument getRefDocument() {
		return this.refDocument;
	}

	public void setRefDocument(RefDocument refDocument) {
		this.refDocument = refDocument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_document")
	public Nomenclature getNomenclatureByTypeDocument() {
		return this.nomenclatureByTypeDocument;
	}

	public void setNomenclatureByTypeDocument(
			Nomenclature nomenclatureByTypeDocument) {
		this.nomenclatureByTypeDocument = nomenclatureByTypeDocument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "classement")
	public Nomenclature getNomenclatureByClassement() {
		return this.nomenclatureByClassement;
	}

	public void setNomenclatureByClassement(
			Nomenclature nomenclatureByClassement) {
		this.nomenclatureByClassement = nomenclatureByClassement;
	}

	@Column(name = "identifiant", length = 13)
	public String getIdentifiant() {
		return this.identifiant;
	}

	public void setIdentifiant(String identifiant) {
		this.identifiant = identifiant;
	}

	@Column(name = "identifiant_entite")
	public String getIdentifiantEntite() {
		return this.identifiantEntite;
	}

	public void setIdentifiantEntite(String identifiantEntite) {
		this.identifiantEntite = identifiantEntite;
	}

	@Column(name = "reference_document", length = 50)
	public String getReferenceDocument() {
		return this.referenceDocument;
	}

	public void setReferenceDocument(String referenceDocument) {
		this.referenceDocument = referenceDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_document", length = 29)
	public Date getDateDocument() {
		return this.dateDocument;
	}

	public void setDateDocument(Date dateDocument) {
		this.dateDocument = dateDocument;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_creation", length = 29)
	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	@Column(name = "objet_document", length = 200)
	public String getObjetDocument() {
		return this.objetDocument;
	}

	public void setObjetDocument(String objetDocument) {
		this.objetDocument = objetDocument;
	}

	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "url", length = 500)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "titre_document", length = 100)
	public String getTitreDocument() {
		return this.titreDocument;
	}

	public void setTitreDocument(String titreDocument) {
		this.titreDocument = titreDocument;
	}

	@Column(name = "nom_entite", length = 50)
	public String getNomEntite() {
		return this.nomEntite;
	}

	public void setNomEntite(String nomEntite) {
		this.nomEntite = nomEntite;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "refDocument")
	public Set<RefDocument> getRefDocuments() {
		return this.refDocuments;
	}

	public void setRefDocuments(Set<RefDocument> refDocuments) {
		this.refDocuments = refDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "refDocument")
	public Set<RefVersionDocument> getRefVersionDocuments() {
		return this.refVersionDocuments;
	}

	public void setRefVersionDocuments(
			Set<RefVersionDocument> refVersionDocuments) {
		this.refVersionDocuments = refVersionDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "refDocument")
	public Set<RefAffectDocument> getRefAffectDocuments() {
		return this.refAffectDocuments;
	}

	public void setRefAffectDocuments(Set<RefAffectDocument> refAffectDocuments) {
		this.refAffectDocuments = refAffectDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "refDocument")
	public Set<RefMotCle> getRefMotCles() {
		return this.refMotCles;
	}

	public void setRefMotCles(Set<RefMotCle> refMotCles) {
		this.refMotCles = refMotCles;
	}

}
