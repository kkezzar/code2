package dz.gov.mesrs.sii.commons.data.model.referentiel;

// Generated 21 janv. 2014 17:45:57 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RefGroupe generated by hbm2java
 */
@Entity
@Table(name = "ref_groupe", schema = "ppm")
public class RefGroupe implements java.io.Serializable {

	/**
	 * serialVersionUID
	 * 
	 * @author BELDI Jamel on : 23 janv. 2014 11:20:38
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private String identifiant;
	private String lcGroupe;
	private String lcGroupeArabe;
	private String llGroupe;
	private String llGroupeArabe;
	private Date dateCreation;
	private RefEtablissement refEtablissement;
	private Set<RefAffectation> refAffectationsForGroupeAffecte = new HashSet<RefAffectation>(
			0);
	/*private Set<RefRelationGroupe> refRelationGroupesForIdGroupePere = new HashSet<RefRelationGroupe>(
			0);*/
	private Set<RefAffectation> refAffectationsForGroupe = new HashSet<RefAffectation>(
			0);
	private Set<RefPartenaire> refPartenaires = new HashSet<RefPartenaire>(0);
	private Set<RefOccupationLieu> refOccupations = new HashSet<RefOccupationLieu>(
			0);
	/*private Set<RefRelationGroupe> refRelationGroupesForIdGroupeFils = new HashSet<RefRelationGroupe>(
			0);*/

	private Nomenclature typeGroupe;
	
	public RefGroupe() {
	}

	public RefGroupe(String identifiant, String lcGroupe) {
		this.identifiant = identifiant;
		this.lcGroupe = lcGroupe;
	}

	public RefGroupe(String identifiant, String lcGroupe, String lcGroupeArabe,
			String llGroupe, String llGroupeArabe,
			Set<RefAffectation> refAffectationsForGroupeAffecte,
			Set<RefRelationGroupe> refRelationGroupesForIdGroupePere,
			Set<RefAffectation> refAffectationsForGroupe,
			Set<RefPartenaire> refPartenaires,
			Set<RefOccupationLieu> refOccupations,
			Set<RefRelationGroupe> refRelationGroupesForIdGroupeFils,
			RefEtablissement refEtablissement) {
		this.identifiant = identifiant;
		this.refEtablissement = refEtablissement;
		this.lcGroupe = lcGroupe;
		this.lcGroupeArabe = lcGroupeArabe;
		this.llGroupe = llGroupe;
		this.llGroupeArabe = llGroupeArabe;
		this.refAffectationsForGroupeAffecte = refAffectationsForGroupeAffecte;
		//this.refRelationGroupesForIdGroupePere = refRelationGroupesForIdGroupePere;
		this.refAffectationsForGroupe = refAffectationsForGroupe;
		this.refPartenaires = refPartenaires;
		this.refOccupations = refOccupations;
		//this.refRelationGroupesForIdGroupeFils = refRelationGroupesForIdGroupeFils;
	}
	
	@Id
	@SequenceGenerator(name = "seq_groupe", initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_groupe")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "identifiant", unique = true, nullable = false, length = 13)
	public String getIdentifiant() {
		return this.identifiant;
	}

	public void setIdentifiant(String identifiant) {
		this.identifiant = identifiant;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "etablissement", nullable = false)
	public RefEtablissement getRefEtablissement() {
		return this.refEtablissement;
	}

	public void setRefEtablissement(RefEtablissement refEtablissement) {
		this.refEtablissement = refEtablissement;
	}

	@Column(name = "lc_groupe", length = 100)
	public String getLcGroupe() {
		return this.lcGroupe;
	}

	public void setLcGroupe(String lcGroupe) {
		this.lcGroupe = lcGroupe;
	}

	@Column(name = "lc_groupe_arabe", length = 100)
	public String getLcGroupeArabe() {
		return this.lcGroupeArabe;
	}

	public void setLcGroupeArabe(String lcGroupeArabe) {
		this.lcGroupeArabe = lcGroupeArabe;
	}

	@Column(name = "ll_groupe", nullable = false, length = 200)
	public String getLlGroupe() {
		return this.llGroupe;
	}

	public void setLlGroupe(String llGroupe) {
		this.llGroupe = llGroupe;
	}

	@Column(name = "ll_groupe_arabe", nullable = false, length = 200)
	public String getLlGroupeArabe() {
		return this.llGroupeArabe;
	}

	public void setLlGroupeArabe(String llGroupeArabe) {
		this.llGroupeArabe = llGroupeArabe;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupeByGroupeAffecte")
	public Set<RefAffectation> getRefAffectationsForGroupeAffecte() {
		return this.refAffectationsForGroupeAffecte;
	}

	public void setRefAffectationsForGroupeAffecte(
			Set<RefAffectation> refAffectationsForGroupeAffecte) {
		this.refAffectationsForGroupeAffecte = refAffectationsForGroupeAffecte;
	}

	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupeByIdGroupePere")
	public Set<RefRelationGroupe> getRefRelationGroupesForIdGroupePere() {
		return this.refRelationGroupesForIdGroupePere;
	}

	public void setRefRelationGroupesForIdGroupePere(
			Set<RefRelationGroupe> refRelationGroupesForIdGroupePere) {
		this.refRelationGroupesForIdGroupePere = refRelationGroupesForIdGroupePere;
	}*/

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupeByGroupe")
	public Set<RefAffectation> getRefAffectationsForGroupe() {
		return this.refAffectationsForGroupe;
	}

	public void setRefAffectationsForGroupe(
			Set<RefAffectation> refAffectationsForGroupe) {
		this.refAffectationsForGroupe = refAffectationsForGroupe;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupe")
	public Set<RefPartenaire> getRefPartenaires() {
		return this.refPartenaires;
	}

	public void setRefPartenaires(Set<RefPartenaire> refPartenaires) {
		this.refPartenaires = refPartenaires;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupe")
	public Set<RefOccupationLieu> getRefOccupations() {
		return this.refOccupations;
	}

	public void setRefOccupations(Set<RefOccupationLieu> refOccupations) {
		this.refOccupations = refOccupations;
	}

	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "refGroupeByIdGroupeFils")
	public Set<RefRelationGroupe> getRefRelationGroupesForIdGroupeFils() {
		return this.refRelationGroupesForIdGroupeFils;
	}

	public void setRefRelationGroupesForIdGroupeFils(
			Set<RefRelationGroupe> refRelationGroupesForIdGroupeFils) {
		this.refRelationGroupesForIdGroupeFils = refRelationGroupesForIdGroupeFils;
	}*/
    
	@Temporal(TemporalType.DATE)
	@Column(name = "date_creation", nullable = false, length = 13)
	public Date getDateCreation() {
		return dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	/**
	 * [RefGroupe.typeGroupe] Getter 
	 * @author rlaib on : 11 janv. 2015  11:54:15
	 * @return the typeGroupe
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type_groupe")
	public Nomenclature getTypeGroupe() {
		return typeGroupe;
	}

	/**
	 * [RefGroupe.typeGroupe] Setter 
	 * @author rlaib on : 11 janv. 2015  11:54:15
	 * @param typeGroupe the typeGroupe to set
	 */
	public void setTypeGroupe(Nomenclature typeGroupe) {
		this.typeGroupe = typeGroupe;
	}
	
	

}
